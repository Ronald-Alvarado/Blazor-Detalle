@page "/Mora"
@using BLL
@using Models

@inject IToastService Toast

<EditForm Model="mora" OnValidSubmit="Guardar">
	<DataAnnotationsValidator/>
    <div class="container shadow-lg p-3 rb-5 bg-white rounded col-md-8">	
		<div class="card">
			<div class="card-header">
				<h3>Registro de Moras</h3>
			</div>
			
			<div class="card-body">
				<div class="form-group">
					<label>MoraId</label>
					<div class="input-group">
						<InputNumber @bind-Value="mora.MoraId" class="form-control col-md-2" />
						<div class="input-group-append">
							<button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
						</div>
					</div>	
				</div>           	
				
                <div class="form-group">
					<label>Fecha</label>
					<InputDate @bind-Value="mora.Fecha" class="form-control"/>
					<ValidationMessage For="@(() => mora.Fecha)"/>
				</div>

                <div class="form-group">
					<label>Prestamo</label>
                        <div class="input-group">                   
                            <select @bind="PrestamoSeleccionado" class="form-control col-md-4">
                                <option value="0" disabled selected>Seleccionar Prestamos</option>
                                
                                @foreach (var item in ListaPrestamos)
                                {
                                    <option value="@item.PrestamoId">@item.PrestamoId</option>
                                }
                            </select>

                            <div class="input-group-append">
							    <button type="button" class="btn btn-primary input-group-text" @onclick="AgregarDetalle">Agregar</button>
						    </div>
                        </div>
				</div>

                @*Detalle*@
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">MoraId</th>
                            <th scope="col">PrestamoId</th>
                            <th scope="col">Valor</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in mora.MoraDetalle)
                        {
                            <tr>
                                <td>@item.MoraId</td>
                                <td>@item.PrestamoId</td>
                                <td>@item.Valor</td>
                            </tr>
                        }

                    </tbody>
                </table>
				
                	                    <!--Buttons--->
				
                <div class="form-group text-center" display: inline-block>
					<div class="btn-group mr-5" role="group" aria-label="First group">
						<button type="button" class="btn btn-outline-secondary" @onclick="Nuevo">Nuevo</button>
					</div>
						<div class="btn-group mr-5" role="group" aria-label="Second group">
						<button type="submit" class="btn btn-outline-success">Guardar</button>
					</div>
					
					<div class="btn-group" role="group" aria-label="Third group">
						<button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</EditForm>

@code{
    Moras mora = new Moras();

    [Parameter] public int PrestamoSeleccionado { get; set;}
    List<Prestamo> ListaPrestamos = new List<Prestamo>();

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        mora = new Moras();
        PrestamoSeleccionado = 0;
        ListaPrestamos = PrestamoBLL.GetList(c => true);
    }

    private void AgregarDetalle()
    {
        Prestamo prestamo = new Prestamo();
        prestamo = PrestamoBLL.Buscar(PrestamoSeleccionado);

        mora.MoraDetalle.Add(new MorasDetalle{

            MoraId = mora.MoraId,
            PrestamoId = prestamo.PrestamoId,
            Valor = prestamo.Balance

        });

    }

    private void Buscar()
    {
        if (mora.MoraId > 0)
        {
            var encontrado = MorasBLL.Buscar(mora.MoraId);

            if (encontrado != null)
                this.mora = encontrado;
            else
                Toast.ShowWarning("No encontrado");
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = MorasBLL.Guardar(mora);

        if (guardo)
        {
            Nuevo();
            Toast.ShowSuccess("Guardado correctamente");
        }
        else
            Toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = MorasBLL.Eliminar(mora.MoraId);

        if (elimino)
        {
            Nuevo();
            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
}